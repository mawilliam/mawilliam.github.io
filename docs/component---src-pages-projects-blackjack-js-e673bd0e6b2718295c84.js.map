{"version":3,"sources":["webpack:///./src/pages/projects/blackjack.js"],"names":["TextContainer","styled","div","ProjectTitle","ProjectTags","ul","ProjectTag","li","ProjectDescription","p","LinkStyle","props","Highlight","to","HighlightImg","imageData","useStaticQuery","fluid","blackjack","childImageSharp","alt","Project","Blackjack","type","defaultProps"],"mappings":"u5CAOA,IAAMA,EAAgBC,IAAOC,IAAV,KAQbC,EAAeF,IAAOC,IAAV,KAOZE,EAAcH,IAAOI,GAAV,KAKXC,EAAaL,IAAOM,GAAV,KASVC,EAAqBP,IAAOQ,EAAV,KAMlBC,EAAYT,aAAO,SAAAU,GAAK,OAAI,kBAAC,IAASA,KAA1BV,CAAH,KAkBTW,EAAY,kBAChB,6BACE,kBAACT,EAAD,kBAGA,kBAACK,EAAD,sbAQA,kBAACJ,EAAD,KACE,kBAACE,EAAD,gBACA,kBAACA,EAAD,oBACA,kBAACA,EAAD,qBAEF,kBAACI,EAAD,CAAWG,GAAG,wBAAd,mBAMEC,EAAe,WACnB,IAAMC,EAAYC,YAAe,cAYjC,OACE,6BACE,kBAAC,IAAD,CACEC,MAAOF,EAAUG,UAAUC,gBAAgBF,MAC3CG,IAAI,uDAMNC,EAAU,WACd,OACE,kBAAC,IAAD,KACE,kBAACrB,EAAD,eAOAsB,EAAY,SAAC,GACjB,OAD8B,EAAXC,MAEjB,IAAK,OACH,OAAQ,kBAACX,EAAD,MACV,IAAK,QACH,OAAQ,kBAACE,EAAD,MACV,QACE,OAAQ,kBAACO,EAAD,QAQdC,EAAUE,aAAe,CACvBD,KAAM,WAGOD","file":"component---src-pages-projects-blackjack-js-e673bd0e6b2718295c84.js","sourcesContent":["import React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../../components/layout\";\n\nconst TextContainer = styled.div`\n  width: 100%;\n  max-width: 1140px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 100px;\n`;\n\nconst ProjectTitle = styled.div`\n  margin-bottom: 10px;\n  font-size: 20px;\n  line-height: 34px;\n  font-weight: 600;\n  text-transform: none;\n`\nconst ProjectTags = styled.ul`\n  list-style: none;\n  margin-bottom: 5px;\n`\n\nconst ProjectTag = styled.li`\n  display: inline-block;\n  font-size: 12px;\n  line-height: 20px;\n  opacity: 0.7;\n  padding-right: 10px;\n  margin-bottom: 0px;\n`\n\nconst ProjectDescription = styled.p`\n  margin-bottom: 5px;\n  font-size: 14px;\n  line-height: 26px;\n`\n\nconst LinkStyle = styled(props => <Link {...props} />)`\n  display: block;\n  -webkit-transition: opacity 200ms ease;\n  transition: opacity 200ms ease;\n  color: #1a1b1f;\n  text-decoration: underline;\n  margin-bottom: 10px;\n  font-size: 12px;\n  line-height: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  background-image: none;\n  &:hover {\n    opacity: 0.8\n  };\n`\n\nconst Highlight = () => (\n  <div>\n    <ProjectTitle>\n      Blackjack\n    </ProjectTitle>\n    <ProjectDescription>\n      For the final project of my Introduction to Programming for Analysts \n      course this past spring, I held a friendly competition to develop a 'bot' \n      to implement the most effective blackjack strategy. As part of the project,\n      I developed a work flow to automatically fetch new student submissions, \n      simulate their bot against the dealer, and update a PowerBI leaderboard\n      with average hand win/loss percentage and average return on wager.\n    </ProjectDescription>\n    <ProjectTags>\n      <ProjectTag>Python </ProjectTag>\n      <ProjectTag>Simulation </ProjectTag>\n      <ProjectTag>Monte Carlo</ProjectTag>\n    </ProjectTags>\n    <LinkStyle to=\"/projects/blackjack/\" >\n      View project&gt;\n    </LinkStyle>\n  </div>\n);\n\nconst HighlightImg = () => {\n  const imageData = useStaticQuery(graphql`\n    query {\n      blackjack: file(relativePath: {eq: \"BlackJack.jpg\"}) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div>\n      <Img \n        fluid={imageData.blackjack.childImageSharp.fluid}\n        alt=\"Image of the Ace of clubs and the 10 of diamonds\"\n      />\n    </div>\n  )\n}\n\nconst Project = () => {\n  return (\n    <Layout>\n      <TextContainer>\n        Test\n      </TextContainer>\n    </Layout>\n  )\n};\n\nconst Blackjack = ( {type} ) => {\n  switch (type) {\n    case \"text\":\n      return (<Highlight />)\n    case \"image\":\n      return (<HighlightImg />)\n    default:\n      return (<Project />)\n  }\n};\n\nBlackjack.propTypes = {\n  type: PropTypes.oneOf(['project', 'text', 'image'])\n};\n\nBlackjack.defaultProps = {\n  type: 'project'\n};\n\nexport default Blackjack;"],"sourceRoot":""}