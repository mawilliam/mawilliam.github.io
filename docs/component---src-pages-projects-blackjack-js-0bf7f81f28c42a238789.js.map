{"version":3,"sources":["webpack:///./src/components/project-highlight.js","webpack:///./src/pages/projects/blackjack.js"],"names":["ProjectRow","styled","div","ProjectTitle","ProjectTags","ul","ProjectTag","li","ProjectDescription","p","LinkStyle","props","Highlight","tagItems","tags","map","tag","title","description","to","link","fluid","photo","alt","TextContainer","HighlightRow","imageData","useStaticQuery","file","childImageSharp","Project","ProjectExport","type","defaultProps"],"mappings":"6FAAA,sEAKMA,EAAaC,IAAOC,IAAV,gFAAGD,CAAH,+IASVE,EAAeF,IAAOC,IAAV,kFAAGD,CAAH,6FAOZG,EAAcH,IAAOI,GAAV,iFAAGJ,CAAH,wCAKXK,EAAaL,IAAOM,GAAV,gFAAGN,CAAH,4GASVO,EAAqBP,IAAOQ,EAAV,wFAAGR,CAAH,wDAMlBS,EAAYT,aAAO,SAAAU,GAAK,OAAI,kBAAC,IAASA,MAA7B,+EAAGV,CAAH,0RAgDAW,IA9BG,SAACD,GACjB,IAAME,EAAWF,EAAMG,KAAKC,KAAI,SAACC,GAAD,OAC9B,kBAACV,EAAD,KAAaU,MAEf,OACE,kBAAChB,EAAD,KACE,6BACE,kBAACG,EAAD,KACGQ,EAAMM,OAET,kBAACT,EAAD,KACGG,EAAMO,aAET,kBAACd,EAAD,KACGS,GAEH,kBAACH,EAAD,CAAWS,GAAIR,EAAMS,MAArB,kBAIF,6BACE,kBAAC,IAAD,CACEC,MAAOV,EAAMW,MACbC,IAAKZ,EAAMY,U,kCClFrB,gFAOMC,EAAgBvB,IAAOC,IAAV,8EAAGD,CAAH,yFAQbwB,EAAe,WACnB,IAWMC,EAAYC,YAAe,cAajC,OACE,kBAAC,IAAD,CACEV,MA1BU,YA2BVC,YA1Ba,sdA2BbJ,KAlBS,CAAC,SAAU,aAAc,eAmBlCM,KApBS,sBAqBTE,MAAOI,EAAUE,KAAKC,gBAAgBR,MACtCE,IATM,sDAcNO,EAAU,WACd,OACE,kBAAC,IAAD,KACE,kBAACN,EAAD,eAOAO,EAAgB,SAAC,GACrB,OADkC,EAAXC,MAErB,IAAK,YACH,OAAQ,kBAACP,EAAD,MACV,QACE,OAAQ,kBAACK,EAAD,QAQdC,EAAcE,aAAe,CAC3BD,KAAM,WAGOD","file":"component---src-pages-projects-blackjack-js-0bf7f81f28c42a238789.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport styled from \"styled-components\";\n\nconst ProjectRow = styled.div`\n  display: -ms-grid;\n  display: grid;\n  grid-column-gap: 30px;\n  grid-template-areas: \". .\";\n  -ms-grid-columns: 3fr 30px 1fr;\n  grid-template-columns: 3fr 1fr;\n`;\n\nconst ProjectTitle = styled.div`\n  margin-bottom: 10px;\n  font-size: 20px;\n  line-height: 34px;\n  font-weight: 600;\n  text-transform: none;\n`\nconst ProjectTags = styled.ul`\n  list-style: none;\n  margin-bottom: 5px;\n`\n\nconst ProjectTag = styled.li`\n  display: inline-block;\n  font-size: 12px;\n  line-height: 20px;\n  opacity: 0.7;\n  padding-right: 10px;\n  margin-bottom: 0px;\n`\n\nconst ProjectDescription = styled.p`\n  margin-bottom: 5px;\n  font-size: 14px;\n  line-height: 26px;\n`\n\nconst LinkStyle = styled(props => <Link {...props} />)`\n  display: block;\n  -webkit-transition: opacity 200ms ease;\n  transition: opacity 200ms ease;\n  color: #1a1b1f;\n  text-decoration: underline;\n  margin-bottom: 10px;\n  font-size: 12px;\n  line-height: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  background-image: none;\n  &:hover {\n    opacity: 0.8\n  };\n`\n\nconst Highlight = (props) => {\n  const tagItems = props.tags.map((tag) => \n    <ProjectTag>{tag}</ProjectTag>\n  )\n  return (\n    <ProjectRow>\n      <div>\n        <ProjectTitle>\n          {props.title}\n        </ProjectTitle>\n        <ProjectDescription>\n          {props.description}\n        </ProjectDescription>\n        <ProjectTags>\n          {tagItems}\n        </ProjectTags>\n        <LinkStyle to={props.link} >\n          View project&gt;\n        </LinkStyle>\n      </div>\n      <div>\n        <Img \n          fluid={props.photo}\n          alt={props.alt}\n        />\n      </div>\n    </ProjectRow>\n  )\n};\n\nexport default Highlight;","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../../components/layout\";\nimport Highlight from \"../../components/project-highlight\";\n\nconst TextContainer = styled.div`\n  width: 100%;\n  max-width: 1140px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 100px;\n`;\n\nconst HighlightRow = () => {\n  const title = \"Blackjack\";\n  const description = `\n    For the final project of my Introduction to Programming for Analysts \n    course this past spring, I held a friendly competition to develop a 'bot' \n    to implement the most effective blackjack strategy. As part of the project,\n    I developed a work flow to automatically fetch new student submissions, \n    simulate their bot against the dealer, and update a PowerBI leaderboard\n    with average hand win/loss percentage and average return on wager.\n  `;\n  const link = \"/projects/blackjack\";\n  const tags = ['Python', 'Simulation', 'Monte Carlo'];\n  const imageData = useStaticQuery(graphql`\n    query {\n      file: file(relativePath: {eq: \"BlackJack.jpg\"}) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n  const alt=\"Image of the Ace of clubs and the 10 of diamonds\";\n\n  return (\n    <Highlight\n      title={title}\n      description={description}\n      tags={tags}\n      link={link}\n      photo={imageData.file.childImageSharp.fluid}\n      alt={alt}\n    />\n  )\n}\n\nconst Project = () => {\n  return (\n    <Layout>\n      <TextContainer>\n        Test\n      </TextContainer>\n    </Layout>\n  )\n};\n\nconst ProjectExport = ( {type} ) => {\n  switch (type) {\n    case \"highlight\":\n      return (<HighlightRow />)\n    default:\n      return (<Project />)\n  }\n};\n\nProjectExport.propTypes = {\n  type: PropTypes.oneOf(['project', 'highlight'])\n};\n\nProjectExport.defaultProps = {\n  type: 'project'\n};\n\nexport default ProjectExport;"],"sourceRoot":""}